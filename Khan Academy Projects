--Design a Store Database: Use of Aggregate Functions, GROUP BY

CREATE TABLE store (
    id INTEGER primary key,
    aisle INTEGER,
    item TEXT,
    quantity INTEGER,
    price REAL
    );
    
INSERT INTO store VALUES 
    (1,1,"apple",5,1.99),
    (2,1,"oranges",6,2.99),
    (3,1,"banana", 5, 3.99),
    (4,1,"kiwi",5,2.39),
    (5,2,"watermelon",7,8.99),
    (6,2,"phone",10,39.99),
    (7,2,"laptop", 15,129.99),
    (8,2,"mouse",4, 9.99),
    (9,2,"wire", 10,4.99),
    (10,2,"keyboard",8,14.99),
    (11,3,"knife",10,9.99),
    (12,3,"spoon",11, 1.99),
    (13,3,"fork",25,1.99),
    (14,3, "plate", 15, 7.99),
    (15,3, "napkin", 50, 1.50);
    
/*Viewing the entire table organized in an easy to read format with 2 parameters: aisle number in ascending order and price in descending order.*/
SELECT * FROM store 
ORDER BY aisle asc, price desc;

/*Identifying the most expensive object by price and listing its name and the aisle number it's located in.*/
SELECT aisle, item, MAX(price) FROM store;

/*Identifying the least expensive object in each aisle by name and price*/
SELECT aisle, item, MIN(price) FROM store 
GROUP BY aisle;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--Karaoke Song Selector: Use of multiple Conditions AND, OR

CREATE TABLE songs (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    title TEXT,
    artist TEXT,
    mood TEXT,
    duration INTEGER,
    released INTEGER);
    
INSERT INTO songs (title, artist, mood, duration, released)    
    VALUES 
    ("Bohemian Rhapsody", "Queen", "epic", 60, 1975),
    ("Let it go", "Idina Menzel", "epic", 227, 2013),
    ("I will survive", "Gloria Gaynor", "epic", 198, 1978),
    ("Twist and Shout", "The Beatles", "happy", 152, 1963),
    ("La Bamba", "Ritchie Valens", "happy", 166, 1958),
    ("I will always love you", "Whitney Houston", "epic", 273, 1992),
    ("Sweet Caroline", "Neil Diamond", "happy", 201, 1969),
    ("Call me maybe", "Carly Rae Jepsen", "happy", 193, 2011);

/* Displaying only the titles from the table called songs */
SELECT title FROM songs;  

/* Displaying only the titles where the mood column returns epic or the realeased column returns when the year is greater than 1990 from the table called songs. */
SELECT title FROM songs WHERE mood = "epic" OR released >1990;

/* Displaying only the title where the mood column returns epic, the released column returns greater than 1990 and the duration returns less than 240 seconds.  */
SELECT title FROM songs WHERE mood = "epic" AND released >1990 AND duration <240 from the table called songs;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------

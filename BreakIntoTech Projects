--Netflix Data Analytics Project (PostgreSQL)

1. How many movie titles are there in the database? (movies only, not tv shows)

SELECT count(type) 
FROM "CharlotteChaze/BreakIntoTech"."netflix_titles_info" 
WHERE type='Movie';

2.When was the most recent batch of tv shows and/or movies added to the database?

SELECT MAX(DATE(date_added))
FROM "CharlotteChaze/BreakIntoTech"."netflix_titles_info";

3. List all the movies and tv shows in alphabetical order.

SELECT type, title
FROM "CharlotteChaze/BreakIntoTech"."netflix_titles_info" 
WHERE type='Movie'
ORDER BY title asc;

SELECT type, title
FROM "CharlotteChaze/BreakIntoTech"."netflix_titles_info" 
WHERE type='TV Show'
ORDER BY title asc;

4. Who was the Director for the movie Bright Star?

SELECT people.director
FROM "CharlotteChaze/BreakIntoTech"."netflix_people" AS people
LEFT JOIN "CharlotteChaze/BreakIntoTech"."netflix_titles_info" AS title
ON people.show_id=title.show_id
WHERE title.title='Bright Star';

5. What is the oldest movie in the database and what year was it made?

SELECT title, release_year
FROM "CharlotteChaze/BreakIntoTech"."netflix_titles_info"
WHERE type='Movie'
ORDER BY release_year asc
LIMIT 1; 

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--Customer & Order Analytics Project

1. How many orders were placed in January?

SELECT count(orderID) 
FROM BIT_DB.jansales; 

2. How many of those orders were for an iPhone?

SELECT count(orderID) 
FROM BIT_DB.jansales 
WHERE Product='iPhone';

3. Select the customer account numbers for all the orders that were placed in February.

SELECT cust.acctnum  
FROM BIT_DB.customers as cust
INNER JOIN BIT_DB.FebSales as feb
ON cust.order_id=feb.orderID;

4. Which product was the cheapest one sold in January, and what was the price?

SELECT Product, min(price)
FROM BIT_DB.JanSales 
GROUP BY Product, price
ORDER BY price ASC
LIMIT 1;

5. What is the total revenue for each product sold in January? (Revenue can be calculated using the number of products sold and the price of the products).

SELECT SUM(Quantity)*price AS revenue, product
FROM BIT_DB.JanSales
GROUP BY product;

6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?

SELECT product, sum(quantity), sum(quantity)*price AS revenue
FROM BIT_DB.FebSales
WHERE location='548 Lincoln St, Seattle, WA 98101'
GROUP BY product

7. How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?

SELECT COUNT(DISTINCT cust.acctnum) AS count, AVG(feb.quantity*feb.price)
FROM BIT_DB.FebSales AS feb
LEFT JOIN BIT_DB.customers AS cust
ON cust.order_id=feb.orderID
WHERE feb.quantity>2;

8. List all the products sold in Los Angeles in February, and include how many of each were sold.

SELECT DISTINCT Product, sum(quantity)
FROM BIT_DB.FebSales 
WHERE location LIKE '%Los Angeles%'
GROUP BY product;

9. Which locations in New York received at least 3 orders in January, and how many orders did they each receive? 

SELECT DISTINCT location, count(orderID)
FROM BIT_DB.JanSales
WHERE location LIKE '%NY%'
GROUP BY location
HAVING count(orderID)>=3;

10. How many of each type of headphone were sold in February?

SELECT DISTINCT product, sum(quantity)
FROM BIT_DB.FebSales
WHERE product LIKE '%headphone%'
GROUP BY product;

11. What was the average amount spent per account in February?

SELECT cust.acctnum, avg(feb.price*feb.quantity) AS AVG
FROM BIT_DB.FebSales AS feb
LEFT JOIN BIT_DB.customers AS cust
ON cust.order_id=feb.orderID
GROUP BY cust.acctnum;

12. What was the average quantity of products purchased per account in February? 

SELECT cust.acctnum, feb.product, AVG(feb.quantity)
FROM BIT_DB.FebSales AS feb
LEFT JOIN BIT_DB.customers AS cust
ON feb.orderID=cust.order_ID
GROUP BY cust.acctnum;

13. Which product brought in the most revenue in January and how much revenue did it bring in total?

SELECT product, sum(quantity)*price AS revenue
FROM BIT_DB.JanSales
GROUP BY product 
ORDER BY sum(quantity)*price DESC
LIMIT 1;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------

